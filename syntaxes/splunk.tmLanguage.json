{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Splunk",
	"patterns": [
		{
			"name": "support.class.splunk",
			"match": "\\b(abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|append|appendcols|appendpipe|arules|associate|audit|autoregress|bucket|bucketdir|chart|cluster|collect|concurrency|contingency|convert|correlate|crawl|datamodel|dbinspect|dedup|delete|delta|diff|dispatch|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|file|filldown|fillnull|findtypes|folderize|foreach|format|gauge|gentimes|geostats|head|highlight|history|input|inputcsv|inputlookup|iplocation|join|kmeans|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|map|metadata|metasearch|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b"
		},
		{
			"match": "([A-Za-z0-9]+) *\\(",
			"captures": {
				"1": { "name": "support.class.splunk"}
			}
		},
		{
			"match": "\\b(\\d+)\\b",
			"name": "constant.numeric.splunk"
		},
		{
			"match": "\\|",
			"name": "constant.language.splunk"
		},
		{
			"match": "\\b(AND|OR|as|by)\\b",
			"name": "keyword.operator.splunk"
		},
		{
			"match": "=",
			"name": "keyword.operator.splunk"
		},
		{
			"name": "string.quoted.double.splunk",
			"begin": "(?<!\\\\)\"",
			"end": "(?<!\\\\)\""
		},
		{
			"name": "string.quoted.single.splunk",
			"begin": "(?<!\\\\)'",
			"end": "(?<!\\\\)'"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.splunk",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.splunk",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.splunk",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.splunk"
}